@model Melodie.Models.Playlist

@section Scripts {
    <script src="~/js/playlists_logo_filler.js"></script>
}

<div id="playlist-container">
	<a id="back-to-home" class="btn2 slide-effect" asp-controller="Home" asp-action="Index">
		<div class="btn-effect-box"></div>
		<span>&lt;-- Retour</span>
	</a>
	
	<div id="playlist-info">
		<div class="playlist-logo"></div>
		@using (Html.BeginForm("UpdatePlaylist", "Playlist", FormMethod.Post, new { id = "playlist-info-text" }))
		{
			@Html.HiddenFor(p => p.PlaylistId)
			@Html.EditorFor(p => p.Name, new { htmlAttributes = new { @class = "playlist-title", placeholder = "Nom de la playlist" } })
			<p class="playlist-duration">5 musiques</p>
			@Html.EditorFor(p => p.Description, new { htmlAttributes = new { @class = "playlist-desc", placeholder = "Description" } })
			
			<div class="playlist-info-buttons">
				<button class="btn2 growing-circle" type="submit">
					<div class="btn-effect-box"></div>
					<span>Enregistrer</span>
				</button>
				
				<button class="btn2 showing-icon" type="submit" formaction="@Url.Action("DeletePlaylist")">
					<!--<div class="btn-effect-box">
						<iframe src="/images/delete-24px.svg" sandbox>
							<img src="/images/delete-24px.png" alt="Delete"/>
						</iframe>
					</div>-->
					<div class="btn-effect-box">
						<object data="/images/delete-24px.svg" type="image/svg+xml">
							<img src="/images/delete-24px.png" alt="Delete"/>
						</object>
					</div>
					<span>Supprimer</span>
				</button>
			</div>
		}
	</div>

	<!-- TODO: Replace this container with a HTML table -->
	<div id="songs-container">
		<div class="song-block">
			<div class="song-play no-play-button song-row"></div>
			<p class="song-name song-row">Nom</p>
			<p class="song-duration song-row">Durée</p>
			<p class="song-author song-row">Auteur</p>
			<p class="song-add-date song-row">Date d'ajout</p>
		</div>
		
		@if (Model.Musics != null)
		{
			@foreach (var music in Model.Musics)
			{
				<div class="song-block">
					<div class="song-play song-row"></div>
					<p class="song-name song-row">@music.Name</p>
					<p class="song-duration song-row">DURATION</p>
					<p class="song-author song-row">AUTHOR</p>
					<p class="song-add-date song-row">ADD DATE</p>
				</div>
			}
		}
		
		@{ await Html.RenderPartialAsync("AddMusicFormPartial", new Music { PlaylistId = Model.PlaylistId }); }
	</div>
</div>