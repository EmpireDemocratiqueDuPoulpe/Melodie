@using System.Globalization
@model Melodie.Models.Playlist

@{
	var bodyClasses = "";
	
	// Music count
	var musicsCount = "";
	
	if (Model.Musics != null)
	{
		var count = Model.Musics.Count;
		musicsCount = count + " musique" + (count > 0 ? "s" : "");
	}
	
	// Delete modal
	var modalClass = "";

	if (ViewBag.OpenDeleteModal != null)
	{
		modalClass = "open";
		bodyClasses += " no-scroll";
	}

	// Music player
	bodyClasses += "has-music-player";
	
	// Body classes
	ViewBag.BodyClasses = bodyClasses;
}

@section Scripts {
	<script src="~/js/PlaylistsLogoFiller.js"></script>
}

<div id="playlist-container">
	<a id="back-to-home" class="btn orange slide-effect" asp-controller="Home" asp-action="Index">
		<div class="btn-effect-box"></div>
		<span>&larr; Retour</span>
	</a>
	
	<div id="playlist-info">
		<div class="playlist-logo auto-acronym"></div>
		@using (Html.BeginForm("Update", "Playlist", FormMethod.Post, new { id = "playlist-info-text" }))
		{
			@Html.AntiForgeryToken()
			
			@Html.HiddenFor(p => p.PlaylistId)
			@Html.HiddenFor(p => p.UserId)
			@Html.EditorFor(p => p.Name, new { htmlAttributes = new { @class = "playlist-title bg-on-hover", placeholder = "Nom de la playlist" } })
			<p class="playlist-duration light-text">@musicsCount</p>
			@Html.EditorFor(p => p.Description, new { htmlAttributes = new { @class = "playlist-desc bg-on-hover", placeholder = "Description" } })
			
			<div class="playlist-info-buttons">
				<button class="btn yellow growing-circle" type="submit">
					<div class="btn-effect-box"></div>
					<span>Enregistrer</span>
				</button>
				
				<button class="btn orange showing-icon" type="button" data-open-modal="1">
					<div class="btn-effect-box">
						<object data="/images/delete-24px.svg" type="image/svg+xml">
							<img src="/images/delete-24px.png" alt="Delete"/>
						</object>
					</div>
					<span>Supprimer</span>
				</button>
			</div>
		}
	</div>
	
	<div id="playlist-delete-confirm" class="modal @modalClass" data-modal-id="1">
		<div class="modal-wrapper">
			<div class="modal-header">
				<h3>Confirmation</h3>
			</div>
			<div class="modal-body">
				<p>&Eacute;crivez <b>"@Model.Name"</b> dans la bo&icirc;te ci-dessous pour supprimer la playlist.</p>
				
				@using (Html.BeginForm("Delete", "Playlist", FormMethod.Post))
				{
					@Html.HiddenFor(p => p.PlaylistId)
					@Html.HiddenFor(p => p.UserId)
					@Html.HiddenFor(p => p.Name)
					
					@Html.ValidationMessageFor(p => p.DeleteConfirmation, null, new {@class = "error"})
					
					<span class="field white field-madoka bottom-label">
						@Html.EditorFor(p => p.DeleteConfirmation, new {htmlAttributes = new {id = "playlist-delete-confirm", @class = "field-input", placeholder = " ", @required = "required"}})
						<label class="field-label" for="playlist-delete-confirm">
							<svg class="field-graphic" width="100%" height="100%" viewBox="0 0 404 77" preserveAspectRatio="none">
								<path d="m0,0l404,0l0,77l-404,0l0,-77z"/>
							</svg>
							<span class="field-label-content">Confirmation</span>
						</label>
					</span>
					
					<div class="modal-buttons">
						<button class="btn yellow slide-effect" type="button" data-close-modal="1">
							<div class="btn-effect-box"></div>
							<span>Annuler</span>
						</button>
						
						<button class="btn orange showing-icon" type="submit">
                        	<div class="btn-effect-box">
                        		<object data="/images/delete-24px.svg" type="image/svg+xml">
                        			<img src="/images/delete-24px.png" alt="Delete"/>
                        		</object>
                        	</div>
                        	<span>Supprimer</span>
                        </button>
					</div>
				}
			</div>
		</div>
	</div>

	<table id="songs-table">
		<thead>
			<tr>
				<th class="song-play-row"></th>
				<th class="song-name-row">Nom</th>
				<th class="song-duration-row">Durée</th>
				<th class="song-author-row">Auteur</th>
				<th class="song-add-date-row">Date d'ajout</th>
				<th class="song-actions-row"></th>
			</tr>
		</thead>
		<tbody>
			@if (Model.Musics != null)
			{
				var i = 0;
				@foreach (var music in Model.Musics)
				{
					<tr class="song-row">
						<td class="song-play-row no-select">
							<div class="song-play-btn" data-id="@i" data-uri="@music.FilePath">
								<object class="play-icon" data="/images/play_arrow-24px.svg" type="image/svg+xml">
									<img src="/images/play_arrow-24px.png" alt="Play"/>
								</object>
								
								<object class="pause-icon" data="/images/pause-24px.svg" type="image/svg+xml">
                                	<img src="/images/pause-24px.png" alt="Pause"/>
                                </object>
							</div>
						</td>
						<td class="song-name-row">@music.Name</td>
						<td class="song-duration-row">@music.Duration</td>
						<td class="song-author-row">@music.Author</td>
						<td class="song-add-date-row">@music.CreationDate.ToString("dd/MM/yyyy", CultureInfo.InvariantCulture)</td>
						<td class="song-actions-row">
							@{ await Html.RenderPartialAsync("DelMusicFormPartial", new Music { MusicId = music.MusicId, PlaylistId = music.PlaylistId }); }
						</td>
					</tr>

					i++;
				}
			}
			
			<tr class="table-space"></tr>
			<tr>
				<td class="song-play-row"></td>
				@{ await Html.RenderPartialAsync("AddMusicFormPartial", new Music {PlaylistId = Model.PlaylistId}); }
			</tr>
		</tbody>
	</table>
</div>

@{ await Html.RenderPartialAsync("MusicPlayer"); }