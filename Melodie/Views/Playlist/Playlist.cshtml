@using System.Globalization
@model Melodie.Models.Playlist

@{
	// Music count
	var musicsCount = "";
	
	if (Model.Musics != null)
	{
		var count = Model.Musics.Count;
		musicsCount = count + " musique" + (count > 0 ? "s" : "");
	}
	
	// Music player
	ViewBag.BodyClasses = "has-music-player";
}

@section Scripts {
	<script src="~/js/PlaylistsLogoFiller.js"></script>
}

<div id="playlist-container">
	<a id="back-to-home" class="btn2 slide-effect" asp-controller="Home" asp-action="Index">
		<div class="btn-effect-box"></div>
		<span>&lt;-- Retour</span>
	</a>
	
	<div id="playlist-info">
		<div class="playlist-logo"></div>
		@using (Html.BeginForm("Update", "Playlist", FormMethod.Post, new { id = "playlist-info-text" }))
		{
			@Html.AntiForgeryToken()
			
			@Html.HiddenFor(p => p.PlaylistId)
			@Html.EditorFor(p => p.Name, new { htmlAttributes = new { @class = "playlist-title", placeholder = "Nom de la playlist" } })
			<p class="playlist-duration">@musicsCount</p>
			@Html.EditorFor(p => p.Description, new { htmlAttributes = new { @class = "playlist-desc", placeholder = "Description" } })
			
			<div class="playlist-info-buttons">
				<button class="btn2 growing-circle" type="submit">
					<div class="btn-effect-box"></div>
					<span>Enregistrer</span>
				</button>
				
				<button class="btn2 showing-icon" type="submit" formaction="@Url.Action("Delete")">
					<!--<div class="btn-effect-box">
						<iframe src="/images/delete-24px.svg" sandbox>
							<img src="/images/delete-24px.png" alt="Delete"/>
						</iframe>
					</div>-->
					<div class="btn-effect-box">
						<object data="/images/delete-24px.svg" type="image/svg+xml">
							<img src="/images/delete-24px.png" alt="Delete"/>
						</object>
					</div>
					<span>Supprimer</span>
				</button>
			</div>
		}
	</div>

	<table id="songs-table">
		<thead>
			<tr>
				<th class="song-play-row"></th>
				<th class="song-name-row">Nom</th>
				<th class="song-duration-row">Durée</th>
				<th class="song-author-row">Auteur</th>
				<th class="song-add-date-row">Date d'ajout</th>
				<th class="song-actions-row"></th>
			</tr>
		</thead>
		<tbody>
			@if (Model.Musics != null)
			{
				@foreach (var music in Model.Musics)
				{
					<tr>
						<td class="song-play-row"><div class="song-play-btn" data-url="@music.FilePath"></div></td>
						<td class="song-name-row">@music.Name</td>
						<td class="song-duration-row">DURATION</td>
						<td class="song-author-row">@music.Author</td>
						<td class="song-add-date-row">@music.CreationDate.ToString("dd/MM/yyyy", CultureInfo.InvariantCulture)</td>
						<td class="song-actions-row">
							@{ await Html.RenderPartialAsync("DelMusicFormPartial", new Music { MusicId = music.MusicId, PlaylistId = music.PlaylistId }); }
						</td>
					</tr>
				}
			}
			
			<tr>
				<td class="song-play-row"></td>
				@{ await Html.RenderPartialAsync("AddMusicFormPartial", new Music {PlaylistId = Model.PlaylistId}); }
			</tr>
		</tbody>
	</table>
</div>

@{ await Html.RenderPartialAsync("MusicPlayer", Model); }